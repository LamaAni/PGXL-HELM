#!/usr/bin/env bash

# loads as library.

DATA_RECOVERY_PATH="$STORAGE_MOUNT_PATH/recovery"
export DATA_RECOVERY_PATH

function backup_data_state(){
    # this method should be called in parallel.
    # back up, continusly, every GTM_BACKUP_INTERVAL the gtm state.

    : ${GTM_BACKUP_INTERVAL:="1"}

    mkdir -p "$DATA_RECOVERY_PATH"

    while true;do
        sleep $GTM_BACKUP_INTERVAL
        cp -R "${PGDATA}"/* "$DATA_RECOVERY_PATH"
        copy_error=$?
        if [ $copy_error -ne 0 ]; then
            echo "$LOGGING_PREFIX WARNING: Failed to store gtm state. If this persists, gtm is at risk."
        fi
    done
}

function recover_if_needed(){
    # call to prepare the gtm for restart. 
    # copies from recovery to data folder.

    local DATA_RECOVERY_PATH="$STORAGE_MOUNT_PATH/recovery"

    if [ ! -d "$DATA_RECOVERY_PATH" ]; then
        return 0
    fi

    echo "$LOGGING_PREFIX Recovery data found @ $DATA_RECOVERY_PATH, copy to data directory if newer..."
    cp -R -f -v -u "$DATA_RECOVERY_PATH"/* "$PGDATA"
}