#!/usr/bin/env bash
# Initialize the postgres database.
cur_path="$(dirname ${BASH_SOURCE[0]})"
echo "$LOGGING_PREFIX Initializing database on node $PG_NODE"

if [ "$RESET_DB" == "true" ] && [ -d "${PGDATA}" ]; then
  rm -R "${PGDATA}"
fi

if [ ! -f "${PGDATA}/postgresql.conf" ]; then
  echo "$LOGGING_PREFIX Database configuration not found, calling initdb"

  PG_PW_FILE=""

  if [ -z "$PGPASSWORD" ]; then
    echo "$LOGGING_PREFIX WARNING: Database superuser password not found, DB is insecure."
    initdb \
      -D "${PGDATA}" \
      -U "${PGUSER}" \
      --nodename="${PG_NODE}" || exit $?
  else
    echo "$LOGGING_PREFIX Database superuser password found, initializing db with password."
    PG_PW_FILE="/tmp/$(mktemp pgpass-XXXXX.pwd)"
    echo "${PGPASSWORD}" > "$PG_PW_FILE"

    initdb \
      -A "${AUTH_TYPE}"\
      -D "${PGDATA}" \
      -U "${PGUSER}" \
      --nodename="${PG_NODE}" \
      --pwfile="${PG_PW_FILE}" || exit $?
  fi

  export PG_PW_FILE

  source "$cur_path/initialize_networks"
  source "$cur_path/initialize_node_config"

  echo "$LOGGING_PREFIX Database configuration initialized."
else
  echo "$LOGGING_PREFIX Database configuration found, init skipped."
fi

# required for postgrs permissions.
# the loaded values are actually set by kuberntes. :(
echo "$LOGGING_PREFIX Set data folder permissions 0700"
chmod -R 0700 ${PGDATA}

# check for proxy.
if [ "$PROXY_ENABLED" = "true" ]; then
  export PG_GTM_HOST="$PROXY_SERVICE"
  echo "$LOGGING_PREFIX looking for GTM proxy host @ $PG_GTM_HOST..."
else
  echo "$LOGGING_PREFIX looking for GTM host @ $PG_GTM_HOST..."
fi

# waiting for GTM.
"$cur_path/wait_for_connection" "$PG_GTM_HOST" "$PG_GTM_PORT" || exit $?
