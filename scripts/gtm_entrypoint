#!/usr/bin/env bash
# bash script for GTM
echo "$LOGGING_PREFIX Starting as global transaction manager (GTM)"
cur_path="$(dirname ${BASH_SOURCE[0]})"

# init and load methods.
source "$cur_path/initialize_env_dependencies"
source "$cur_path/methods_recovery"

# validating data directory.
echo "$LOGGING_PREFIX Creating data directory if dose not exist"
mkdir -p "${PGDATA}"

# call to recover if needed.
recover_if_needed || exit $?

echo "$LOGGING_PREFIX Set data folder permissions 0700"
chmod -R 0700 "${PGDATA}"

# loading current gtm control info.
control_info=""
if [ -f "${PGDATA}/gtm.control" ]; then
  control_info=$(cat "${PGDATA}/gtm.control")
  control_info=${control_info##*( )}
fi

if [ -z "$control_info" ]; then
  echo "$LOGGING_PREFIX GTM configuration not found, calling initdb"

  initgtm -D "${PGDATA}" -Z gtm

  cat /config/gtm_config_append >> "${PGDATA}/gtm.conf"
  cat /config/config_append >> "${PGDATA}/gtm.conf"
  source "$cur_path/initialize_networks"

else
  echo "$LOGGING_PREFIX GTM configuration found, init skipped."
  if [ -f "${PGDATA}/gtm.pid" ]; then
    echo "$LOGGING_PREFIX GTM process not shut down properly, lock file gtm.pid still exists. Deleting."
    rm "${PGDATA}/gtm.pid"
  fi
  
  echo "$LOGGING_PREFIX Current control state:"
  echo "$control_info"
  echo
fi

backup_data_state &
echo "$LOGGING_PREFIX Started gtm recovery process"

# start the GTM
gtm -D "${PGDATA}" -h "${PG_HOST}" -n "${PG_NODE}" -p "${PG_GTM_PORT}" -l /dev/stdout
